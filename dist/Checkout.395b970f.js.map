{"version":3,"sources":["containers/Checkout/Checkout.js"],"names":["Checkout","Component","props","history","goBack","order","species","sides","price","onOrderBurger","currentUser","accountId","render","summary","purchasedRedirect","purchased","width","margin","checkoutCancelled","mapStateToProps","state","iceCreamBuilder","totalPrice","auth","mapDispatchToProps","dispatch","orderData","actions","purchaseIceCream"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,QAAN,SAAuBC,gBAAvB,CAAiC;AAAA;AAAA;;AAAA,sDACJ,MAAM;AAC/B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACD,KAH8B;;AAAA,6CAIb,MAAM;AACtB,YAAMC,KAAK,GAAG;AACZC,QAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,OADR;AAEZC,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAFN;AAGZC,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM;AAHN,OAAd;AAKA,WAAKN,KAAL,CAAWO,aAAX,CAAyB,KAAKP,KAAL,CAAWQ,WAAX,CAAuBC,SAAhD,EAA2DN,KAA3D;AACD,KAX8B;AAAA;;AAa/BO,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,gBAAG,6BAAC,wBAAD;AAAU,MAAA,EAAE,EAAC;AAAb,MAAd;;AACA,QAAI,KAAKX,KAAL,CAAWI,OAAf,EAAwB;AACtB,YAAMQ,iBAAiB,GAAG,KAAKZ,KAAL,CAAWa,SAAX,gBACxB,6BAAC,wBAAD;AAAU,QAAA,EAAE,EAAC;AAAb,QADwB,GAEtB,IAFJ;AAGAF,MAAAA,OAAO,gBACL,0CACGC,iBADH,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,8DADF,eAEE;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB;AAAZ,sBACE,6BAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWI,OAA5B;AAAqC,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK;AAAtD,QADF,CAFF,eAKE,6BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,KAAKW;AAAvC,kBALF,eAQE,6BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWO;AAA9C,oBARF,CAFF,eAcE,4CAAS;;;;;;aAAT,CAdF,CADF;AAwBD;;AACD,WAAOI,OAAP;AACD;;AA7C8B;;AAgDjC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,OAAO,EAAEc,KAAK,CAACC,eAAN,CAAsBf,OAD1B;AAELC,IAAAA,KAAK,EAAEa,KAAK,CAACC,eAAN,CAAsBd,KAFxB;AAGLC,IAAAA,KAAK,EAAEY,KAAK,CAACC,eAAN,CAAsBC,UAHxB;AAILZ,IAAAA,WAAW,EAAEU,KAAK,CAACG,IAAN,CAAWb,WAJnB;AAKLK,IAAAA,SAAS,EAAEK,KAAK,CAACf,KAAN,CAAYU;AALlB,GAAP;AAOD,CARD;;AAUA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhB,IAAAA,aAAa,EAAE,CAACE,SAAD,EAAYe,SAAZ,KACbD,QAAQ,CAACE,OAAO,CAACC,gBAAR,CAAyBjB,SAAzB,EAAoCe,SAApC,CAAD;AAFL,GAAP;AAID,CALD;;eAOe,yBAAQP,eAAR,EAAyBK,kBAAzB,EAA6CxB,QAA7C","file":"Checkout.395b970f.js","sourceRoot":"../src","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n  checkoutHandler = () => {\n    const order = {\n      species: this.props.species,\n      sides: this.props.sides,\n      price: this.props.price,\n    };\n    this.props.onOrderBurger(this.props.currentUser.accountId, order);\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.species) {\n      const purchasedRedirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <div className=\"CheckoutSummary\">\n            <h1>Hope you enjoy it!</h1>\n            <div style={{ width: \"100%\", margin: \"auto\" }}>\n              <Burger species={this.props.species} side={this.props.sides} />\n            </div>\n            <Button btnType=\"Danger\" clicked={this.checkoutCancelled}>\n              CANCEL\n            </Button>\n            <Button btnType=\"Success\" clicked={this.props.onOrderBurger}>\n              CHECKOUT\n            </Button>\n          </div>\n          <style>{`\n            .CheckoutSummary {\n                text-align: center;\n                width: 80%;\n                margin: auto;\n            }\n            `}</style>\n        </div>\n      );\n    }\n    return summary;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    species: state.iceCreamBuilder.species,\n    sides: state.iceCreamBuilder.sides,\n    price: state.iceCreamBuilder.totalPrice,\n    currentUser: state.auth.currentUser,\n    purchased: state.order.purchased,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onOrderBurger: (accountId, orderData) =>\n      dispatch(actions.purchaseIceCream(accountId, orderData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n"]}