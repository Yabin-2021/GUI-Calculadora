{"version":3,"sources":["components/Order/Order.js","components/Utils/Spinner.js","containers/Orders/Orders.js"],"names":["species","sides","price","FlavorOutput","map","ig","textTransform","display","margin","border","padding","Orders","Component","componentDidMount","props","onFetchOrders","currentUser","accountId","render","orders","loading","order","id","iceCream","mapStateToProps","state","auth","mapDispatchToProps","dispatch","actions","fetchOrders"],"mappings":";;;;;;;AAAA,ACAA,ACAA;;AACA;;AACA,eFAe,ACAA,CDAC,kBCCd;ADDgBA,ACCX,EDDWA,ACCX,ODDS,ECCA,EAAC;ADDUC,ACCzB,ACCF,EFF2BA,KAAX,SCEZ,4CAAS;ADFqBC,EAAAA;AAAlB,AEIhB,CFJe,KAA+B;AAC5C,QAAMC,YAAY,GAAGH,OAAO,CAACI,GAAR,CAAaC,EAAD,IAAQ;AACvC,wBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,aAAa,EAAE,YADV;AAELC,QAAAA,OAAO,EAAE,cAFJ;AAGLC,QAAAA,MAAM,EAAE,OAHH;AAILC,QAAAA,MAAM,EAAE,gBAJH;AAKLC,AEHV,MAAMC,EFGID,IEHV,GFGiB,EAAE,IEHEE,gBAArB,CAA+B;AFFhB,AEGbC,EAAAA,KFJI,YEIa,GAAG;AFId,AEHJ,MFGI,GAAG,AEHFC,EFGIT,GEHT,CAAWU,aAAX,CAAyB,KAAKD,KAAL,CAAWE,WAAX,CAAuBC,SAAhD;AFLE,AEMH,OFIMZ,EAVH,CADF;AAcD,GAfoB,CAArB;AAiBA,AEPAa,EAAAA,MAAM,GAAG,WFQP;AAAK,AEPL,IFOK,IEPDC,KFOU,CEPJ,CFOK,eEPF,6BAAC,gBAAD,OAAb;AFOA,kBACE,qDAAahB,YAAb,CADF,eAEE,kDAAUF,KAAV,CAFF,eAGE,gEACS,6CAASC,KAAT,WADT,CAHF,eAME,4CAAS;AEZX,QAAI,CAAC,KAAKY,KAAL,CAAWM,OAAhB,EAAyB;AACvBD,MAAAA,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAAX,CAAkBf,GAAlB,CAAuBiB,KAAD,iBAC7B,6BAAC,cAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,QAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAevB,OAF1B;AAGE,QAAA,KAAK,EAAEqB,KAAK,CAACE,QAAN,CAAetB,KAHxB;AAIE,QAAA,KAAK,EAAEoB,KAAK,CAACE,QAAN,CAAerB;AAJxB,QADO,CAAT;AAQD,UFGC,CANF,CADF;AAkBD;AEbG,wBAAO,4DAAGiB,MAAH,CAAP;AACD;;AAlB4B;;AAqB/B,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,MAAM,EAAEM,KAAK,CAACJ,KAAN,CAAYF,MADf;AAELH,IAAAA,WAAW,EAAES,KAAK,CAACC,IAAN,CAAWV,WAFnB;AAGLI,IAAAA,OAAO,EAAEK,KAAK,CAACJ,KAAN,CAAYD;AAHhB,GAAP;AAKD,CAND;;AAQA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,aAAa,EAAGE,SAAD,IAAeW,QAAQ,CAACC,OAAO,CAACC,WAAR,CAAoBb,SAApB,CAAD;AADjC,GAAP;AAGD,CAJD;;eAMe,yBAAQO,eAAR,EAAyBG,kBAAzB,EAA6ChB,MAA7C;;;;;;;;;;;;;;;;;;;;;UDvCX,CADF","file":"Orders.ee96894f.js","sourceRoot":"../src","sourcesContent":["import React from \"react\";\n\nexport default ({ species, sides, price }) => {\n  const FlavorOutput = species.map((ig) => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\",\n        }}\n        key={ig}\n      >\n        {ig}\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"Order\">\n      <p>Flavors: {FlavorOutput}</p>\n      <p>Side: {sides}</p>\n      <p>\n        Price: <strong>{price}â“ƒ</strong>\n      </p>\n      <style>{`\n        .Order {\n            width: 80%;\n            border: 1px solid #eee;\n            box-shadow: 0 2px 3px #ccc;\n            padding: 10px;\n            margin: 10px auto;\n            box-sizing: border-box;\n        }`}</style>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"Loader\">\n    <style>{`\n        .Loader,\n        .Loader:before,\n        .Loader:after {\n        border-radius: 50%;\n        }\n        .Loader {\n        color: #521751;\n        font-size: 11px;\n        text-indent: -99999em;\n        margin: 55px auto;\n        position: relative;\n        width: 10em;\n        height: 10em;\n        box-shadow: inset 0 0 0 1em;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n        }\n        .Loader:before,\n        .Loader:after {\n        position: absolute;\n        content: '';\n        }\n        .Loader:before {\n        width: 5.2em;\n        height: 10.2em;\n        background: #fff;\n        border-radius: 10.2em 0 0 10.2em;\n        top: -0.1em;\n        left: -0.1em;\n        -webkit-transform-origin: 5.2em 5.1em;\n        transform-origin: 5.2em 5.1em;\n        -webkit-animation: load2 2s infinite ease 1.5s;\n        animation: load2 2s infinite ease 1.5s;\n        }\n        .Loader:after {\n        width: 5.2em;\n        height: 10.2em;\n        background: #fff;\n        border-radius: 0 10.2em 10.2em 0;\n        top: -0.1em;\n        left: 5.1em;\n        -webkit-transform-origin: 0px 5.1em;\n        transform-origin: 0px 5.1em;\n        -webkit-animation: load2 2s infinite ease;\n        animation: load2 2s infinite ease;\n        }\n        @-webkit-keyframes load2 {\n        0% {\n            -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n        }\n        100% {\n            -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n        }\n        }\n        @keyframes load2 {\n        0% {\n            -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n        }\n        100% {\n            -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n        }\n        }`}</style>\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nimport Order from \"../../components/Order/Order\";\n\nimport Spinner from \"../../components/Utils/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.currentUser.accountId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map((order) => (\n        <Order\n          key={order.id}\n          species={order.iceCream.species}\n          sides={order.iceCream.sides}\n          price={order.iceCream.price}\n        />\n      ));\n    }\n    return <>{orders}</>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    currentUser: state.auth.currentUser,\n    loading: state.order.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (accountId) => dispatch(actions.fetchOrders(accountId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n"]}