{"version":3,"sources":["containers/Checkout/Checkout.js"],"names":["Checkout","Component","props","history","goBack","order","species","sides","price","onOrderBurger","currentUser","accountId","summary","purchasedRedirect","purchased","width","margin","checkoutCancelled","mapStateToProps","state","burgerBuilder","totalPrice","auth","mapDispatchToProps","dispatch","orderData","actions","purchaseIceCream"],"mappings":";AAqEe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArEf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,oBACA,EAAA,QAAA,eAmEe,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,IAAA,OAAA,WAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,YAAA,EAAA,QAAA,UAAA,EAAA,UAAA,QAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjETA,IAAAA,EAAAA,SAAAA,GAiES,EAAA,EAjEQC,EAAAA,WAiER,IAAA,EAAA,EAAA,GAAA,SAAA,IAAA,IAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAAA,OAhEc,EAAA,EAgEd,EAAA,EAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,KAhEc,2BAAA,WACpBC,EAAAA,MAAMC,QAAQC,WAEH,EAAA,EAAA,GAAA,kBAAA,WACVC,IAAAA,EAAQ,CACZC,QAAS,EAAKJ,MAAMI,QACpBC,MAAO,EAAKL,MAAMK,MAClBC,MAAO,EAAKN,MAAMM,OAEfN,EAAAA,MAAMO,cAAc,EAAKP,MAAMQ,YAAYC,UAAWN,KAuDhD,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SApDJ,MAAA,WACHO,IAAAA,EAAU,EAAC,QAAA,cAAA,EAAD,SAAA,CAAU,GAAG,MACvB,GAAA,KAAKV,MAAMI,QAAS,CAChBO,IAAAA,EAAoB,KAAKX,MAAMY,UACnC,EAAC,QAAA,cAAA,EAAD,SAAA,CAAU,GAAG,MACX,KACJF,EACE,EACGC,QAAAA,cAAAA,MAAAA,KAAAA,EACD,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,mBACb,EADF,QAAA,cAAA,KAAA,KAAA,sBAEE,EAAA,QAAA,cAAA,MAAA,CAAK,MAAO,CAAEE,MAAO,OAAQC,OAAQ,SACnC,EAAC,QAAA,cAAA,OAAD,CAAQ,QAAS,KAAKd,MAAMI,QAAS,KAAM,KAAKJ,MAAMK,SAExD,EAAC,QAAA,cAAA,OAAD,CAAQ,QAAQ,SAAS,QAAS,KAAKU,mBALzC,UAQE,EAAC,QAAA,cAAA,OAAD,CAAQ,QAAQ,UAAU,QAAS,KAAKf,MAAMO,eARhD,aAYA,EAdF,QAAA,cAAA,QAAA,KAAA,mKAwBGG,OAAAA,MAqBI,EAjETZ,GAgDAkB,EAAkB,SAACC,GAChB,MAAA,CACLb,QAASa,EAAMC,cAAcd,QAC7BC,MAAOY,EAAMC,cAAcb,MAC3BC,MAAOW,EAAMC,cAAcC,WAC3BX,YAAaS,EAAMG,KAAKZ,YACxBI,UAAWK,EAAMd,MAAMS,YAIrBS,EAAqB,SAACC,GACnB,MAAA,CACLf,cAAe,SAACE,EAAWc,GACzBD,OAAAA,EAASE,QAAQC,iBAAiBhB,EAAWc,OAIpC,GAAA,EAAQP,EAAAA,SAAAA,EAAiBK,EAAzB,CAA6CvB,GAA7C,QAAA,QAAA","file":"Checkout.62f35e99.js","sourceRoot":"../src","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n  checkoutHandler = () => {\n    const order = {\n      species: this.props.species,\n      sides: this.props.sides,\n      price: this.props.price,\n    };\n    this.props.onOrderBurger(this.props.currentUser.accountId, order);\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.species) {\n      const purchasedRedirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <div className=\"CheckoutSummary\">\n            <h1>Hope you enjoy it!</h1>\n            <div style={{ width: \"100%\", margin: \"auto\" }}>\n              <Burger species={this.props.species} side={this.props.sides} />\n            </div>\n            <Button btnType=\"Danger\" clicked={this.checkoutCancelled}>\n              CANCEL\n            </Button>\n            <Button btnType=\"Success\" clicked={this.props.onOrderBurger}>\n              CHECKOUT\n            </Button>\n          </div>\n          <style>{`\n            .CheckoutSummary {\n                text-align: center;\n                width: 80%;\n                margin: auto;\n            }\n            `}</style>\n        </div>\n      );\n    }\n    return summary;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    species: state.burgerBuilder.species,\n    sides: state.burgerBuilder.sides,\n    price: state.burgerBuilder.totalPrice,\n    currentUser: state.auth.currentUser,\n    purchased: state.order.purchased,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onOrderBurger: (accountId, orderData) =>\n      dispatch(actions.purchaseIceCream(accountId, orderData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n"]}