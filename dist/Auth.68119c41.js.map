{"version":3,"sources":["containers/Auth/Auth.js"],"names":["Auth","Component","window","console","log","wallet","requestSignIn","nearConfig","contractName","location","search","includes","replace","origin","pathname","props","building","authRedirectPath","setPath","isSignedIn","setCurrentUser","currentUser","isAuthenticated","mapStateToProps","state","auth","burgerBuilder","mapDispatchToProps","dispatch","actions","LogIn","setRedirectPath"],"mappings":"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","file":"Auth.68119c41.js","sourceRoot":"../src","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as actions from \"../../store/actions/index\";\n\nimport Button from \"../../components/Utils/Button\";\nclass Auth extends Component {\n  componentDidMount() {\n    if (!this.props.building && this.props.authRedirectPath !== \"/\") {\n      this.props.setPath();\n    }\n    if (window.wallet.isSignedIn()) {\n      this.props.setCurrentUser(window.currentUser);\n    }\n  }\n\n  requestSignIn = async () => {\n    console.log(\"start sign in\");\n    const appTitle = \"NEAR ICECREAM\";\n    await window.wallet.requestSignIn(window.nearConfig.contractName, appTitle);\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(\n        window.location.origin + window.location.pathname\n      );\n    }\n  };\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return <Redirect to={this.props.authRedirectPath} />;\n    }\n\n    return (\n      <Button clicked={this.requestSignIn}>\n        Log In with NEAR Wallet\n        <style>{`\n      .Auth {\n        margin: 20px auto;\n        width: 80%;\n        text-align: center;\n        box-shadow: 0 2px 3px #ccc;\n        border: 1px solid #eee;\n        padding: 10px;\n        box-sizing: border-box;\n    }\n    \n    @media (min-width: 600px) {\n        .Auth {\n            width: 500px;\n        }\n    }`}</style>\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: !!state.auth.currentUser,\n    building: state.burgerBuilder.building,\n    authRedirectPath: state.auth.authRedirectPath,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (currentUser) => dispatch(actions.LogIn(currentUser)),\n    setPath: () => dispatch(actions.setRedirectPath(\"/\")),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"]}