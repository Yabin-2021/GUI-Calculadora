{"version":3,"sources":["components/Order/Order.js","components/Utils/Spinner.js","containers/Orders/Orders.js"],"names":["species","sides","price","FlavorOutput","map","ig","textTransform","display","margin","border","padding","Orders","Component","props","onFetchOrders","currentUser","accountId","orders","loading","order","id","iceCream","mapStateToProps","state","auth","mapDispatchToProps","dispatch","actions","fetchOrders"],"mappings":"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","file":"Orders.5d212527.js","sourceRoot":"../src","sourcesContent":["import React from \"react\";\n\nexport default ({ species, sides, price }) => {\n  const FlavorOutput = species.map((ig) => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\",\n        }}\n        key={ig}\n      >\n        {ig}\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"Order\">\n      <p>Flavors: {FlavorOutput}</p>\n      <p>Side: {sides}</p>\n      <p>\n        Price: <strong>{price}â“ƒ</strong>\n      </p>\n      <style>{`\n        .Order {\n            width: 80%;\n            border: 1px solid #eee;\n            box-shadow: 0 2px 3px #ccc;\n            padding: 10px;\n            margin: 10px auto;\n            box-sizing: border-box;\n        }`}</style>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"Loader\">\n    <style>{`\n        .Loader,\n        .Loader:before,\n        .Loader:after {\n        border-radius: 50%;\n        }\n        .Loader {\n        color: #521751;\n        font-size: 11px;\n        text-indent: -99999em;\n        margin: 55px auto;\n        position: relative;\n        width: 10em;\n        height: 10em;\n        box-shadow: inset 0 0 0 1em;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n        }\n        .Loader:before,\n        .Loader:after {\n        position: absolute;\n        content: '';\n        }\n        .Loader:before {\n        width: 5.2em;\n        height: 10.2em;\n        background: #fff;\n        border-radius: 10.2em 0 0 10.2em;\n        top: -0.1em;\n        left: -0.1em;\n        -webkit-transform-origin: 5.2em 5.1em;\n        transform-origin: 5.2em 5.1em;\n        -webkit-animation: load2 2s infinite ease 1.5s;\n        animation: load2 2s infinite ease 1.5s;\n        }\n        .Loader:after {\n        width: 5.2em;\n        height: 10.2em;\n        background: #fff;\n        border-radius: 0 10.2em 10.2em 0;\n        top: -0.1em;\n        left: 5.1em;\n        -webkit-transform-origin: 0px 5.1em;\n        transform-origin: 0px 5.1em;\n        -webkit-animation: load2 2s infinite ease;\n        animation: load2 2s infinite ease;\n        }\n        @-webkit-keyframes load2 {\n        0% {\n            -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n        }\n        100% {\n            -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n        }\n        }\n        @keyframes load2 {\n        0% {\n            -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n        }\n        100% {\n            -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n        }\n        }`}</style>\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nimport Order from \"../../components/Order/Order\";\n\nimport Spinner from \"../../components/Utils/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.currentUser.accountId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map((order) => (\n        <Order\n          key={order.id}\n          species={order.iceCream.species}\n          sides={order.iceCream.sides}\n          price={order.iceCream.price}\n        />\n      ));\n    }\n    return <>{orders}</>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    currentUser: state.auth.currentUser,\n    loading: state.order.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (accountId) => dispatch(actions.fetchOrders(accountId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n"]}